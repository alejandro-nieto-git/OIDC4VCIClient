"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const oid4vci_common_1 = require("@sphereon/oid4vci-common");
const jose = __importStar(require("jose"));
const __1 = require("..");
const MetadataMocks_1 = require("./MetadataMocks");
const jwt = {
    header: { alg: oid4vci_common_1.Alg.ES256, kid: 'did:example:ebfeb1f712ebc6f1c276e12ec21/keys/1', typ: 'jwt' },
    payload: { iss: 'sphereon:wallet', nonce: 'tZignsnFbp', jti: 'tZignsnFbp223', aud: MetadataMocks_1.IDENTIPROOF_ISSUER_URL, iat: Date.now() },
};
const kid = 'did:example:ebfeb1f712ebc6f1c276e12ec21/keys/1';
let keypair;
function proofOfPossessionCallbackFunction(args, kid) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!args.payload.aud) {
            throw Error('aud required');
        }
        else if (!kid) {
            throw Error('kid required');
        }
        return yield new jose.SignJWT(Object.assign({}, args.payload))
            .setProtectedHeader({ alg: 'ES256' })
            .setIssuedAt(args.payload.iat)
            .setIssuer(kid)
            .setAudience(args.payload.aud)
            .setExpirationTime('2h')
            .sign(keypair.privateKey);
    });
}
beforeAll(() => __awaiter(void 0, void 0, void 0, function* () {
    const { privateKey, publicKey } = yield jose.generateKeyPair('ES256');
    keypair = { publicKey: publicKey, privateKey: privateKey };
}));
describe('ProofOfPossession Builder ', () => {
    it('should fail without supplied proof or callbacks', function () {
        return __awaiter(this, void 0, void 0, function* () {
            yield expect(__1.ProofOfPossessionBuilder.fromProof(undefined, oid4vci_common_1.OpenId4VCIVersion.VER_1_0_11)
                .withIssuer(MetadataMocks_1.IDENTIPROOF_ISSUER_URL)
                .withClientId('sphereon:wallet')
                .withKid(kid)
                .build()).rejects.toThrow(Error(oid4vci_common_1.PROOF_CANT_BE_CONSTRUCTED));
        });
    });
    it('should fail wit undefined jwt supplied', function () {
        return __awaiter(this, void 0, void 0, function* () {
            yield expect(() => __1.ProofOfPossessionBuilder.fromJwt({ jwt, callbacks: { signCallback: proofOfPossessionCallbackFunction }, version: oid4vci_common_1.OpenId4VCIVersion.VER_1_0_08 })
                .withJwt(undefined)
                .withIssuer(MetadataMocks_1.IDENTIPROOF_ISSUER_URL)
                .withClientId('sphereon:wallet')
                .withKid(kid)
                .build()).toThrow(Error(oid4vci_common_1.NO_JWT_PROVIDED));
        });
    });
    it('should build a proof with all required params present', function () {
        return __awaiter(this, void 0, void 0, function* () {
            const proof = yield __1.ProofOfPossessionBuilder.fromJwt({
                jwt,
                callbacks: {
                    signCallback: proofOfPossessionCallbackFunction,
                },
                version: oid4vci_common_1.OpenId4VCIVersion.VER_1_0_08,
            })
                .withIssuer(MetadataMocks_1.IDENTIPROOF_ISSUER_URL)
                .withKid(kid)
                .withClientId('sphereon:wallet')
                .build();
            expect(proof).toBeDefined();
        });
    });
    it('should fail creating a proof of possession with simple verification', () => __awaiter(void 0, void 0, void 0, function* () {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        function proofOfPossessionCallbackFunction(_args, _kid) {
            return __awaiter(this, void 0, void 0, function* () {
                throw new Error(oid4vci_common_1.JWS_NOT_VALID);
            });
        }
        yield expect(__1.ProofOfPossessionBuilder.fromJwt({ jwt, callbacks: { signCallback: proofOfPossessionCallbackFunction }, version: oid4vci_common_1.OpenId4VCIVersion.VER_1_0_08 })
            .withIssuer(MetadataMocks_1.IDENTIPROOF_ISSUER_URL)
            .withClientId('sphereon:wallet')
            .withKid(kid)
            .build()).rejects.toThrow(Error(oid4vci_common_1.JWS_NOT_VALID));
    }));
    it('should fail creating a proof of possession without verify callback', () => __awaiter(void 0, void 0, void 0, function* () {
        // eslint-disable-next-line @typescript-eslint/no-unused-vars
        function proofOfPossessionCallbackFunction(_args, _kid) {
            return __awaiter(this, void 0, void 0, function* () {
                throw new Error(oid4vci_common_1.JWS_NOT_VALID);
            });
        }
        yield expect(__1.ProofOfPossessionBuilder.fromJwt({ jwt, callbacks: { signCallback: proofOfPossessionCallbackFunction }, version: oid4vci_common_1.OpenId4VCIVersion.VER_1_0_08 })
            .withIssuer(MetadataMocks_1.IDENTIPROOF_ISSUER_URL)
            .withClientId('sphereon:wallet')
            .withKid(kid)
            .build()).rejects.toThrow(Error(oid4vci_common_1.JWS_NOT_VALID));
    }));
});
//# sourceMappingURL=ProofOfPossessionBuilder.spec.js.map